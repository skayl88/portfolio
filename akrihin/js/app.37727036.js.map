{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/scripts/index.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","isMobile","test","navigator","userAgent","document","sectionsCount","querySelectorAll","sectionsAnchors","$","fullpage","scrollingSpeed","anchors","afterLoad","origin","destination","direction","fn","setAllowScrolling","gamePage","querySelector","finalPage","startPage","innerHTML","microbialParams","points","width","height","gameContainer","currentPointsText","mistakes","bestResult","arrayCurrentMicrobe","lifes","duration","isFinish","gameContainerHeight","clientHeight","gameContainerWidth","clientWidth","leftPositionGameContainer","getBoundingClientRect","left","start","quantity","randomInteger","isAkrihin","Array","createElement","createMicrobial","bomb","container","createParentContainer","src","style","setAttribute","firstChild","appendChild","createBomb","akrihin","createAkrihin","forEach","item","parents","items","x","Math","trunc","parent","animate","timing","timeFraction","draw","progress","transform","y","parseInt","getComputedStyle","split","addAnimation","console","log","selectedItem","microb","addEventListener","e","this","dataset","point","microbeAction","bombAction","akrihinAction","setTimeout","destroy","addActionMob","addActionDesk","timer","setInterval","clearInterval","endGame","startTimer","options","performance","now","requestAnimationFrame","time","selectedParam","classList","add","conteinerInner","remove","min","max","rand","random","round","reason","location","href","localStorage","setItem","getItem","currentResult","textResult","currentPoints","bestPoints","footer","isClose"],"mappings":"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","file":"js/app.37727036.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import '../styles/index.scss';\nimport anime from 'animejs/lib/anime.es.js';\n\nif (process.env.NODE_ENV === 'development') {\n    require('../index.html');\n}\nlet isMobile = false;\nif (\n    /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n        navigator.userAgent,\n    )\n) {\n    isMobile = true;\n}\n//fullpage\n(function (window, document) {\n    var sectionsCount = document.querySelectorAll('.section').length;\n\n    var sectionsAnchors = [];\n    for (var i = 1; i <= sectionsCount; i++) {\n        sectionsAnchors.push('' + i);\n    }\n\n    $('#fullpage').fullpage({\n        scrollingSpeed: 500,\n        anchors: sectionsAnchors,\n        // paddingBottom: '60px',\n        afterLoad: function afterLoad(origin, destination, direction) {},\n    });\n\n    $.fn.fullpage.setAllowScrolling(false);\n})(window, document);\n\nconst gamePage = document.querySelector('#game');\nconst finalPage = document.querySelector('#final');\nconst startPage = document.querySelector('#start');\n\nif (startPage && isMobile) {\n    const textInstr = startPage.querySelector('#instruction');\n\n    textInstr.innerHTML = 'Успевайте кликать на&nbsp;вирусы,';\n}\n\nif (gamePage) {\n    const microbialParams = [\n        {\n            points: 100,\n            width: 50,\n            height: 50,\n        },\n        {\n            points: 50,\n            width: 80,\n            height: 80,\n        },\n        {\n            points: 25,\n            width: 100,\n            height: 100,\n        },\n    ];\n    const gameContainer = gamePage.querySelector('#gameContainer');\n    const currentPointsText = gamePage.querySelector('#count');\n    const mistakes = gamePage.querySelectorAll('.mistake');\n    const bestResult = document.querySelector('#best-result');\n    let arrayCurrentMicrobe;\n    let points = 0;\n    let lifes = 2;\n    let duration = 2000;\n    let isFinish = false;\n\n    const gameContainerHeight = gameContainer.clientHeight;\n    const gameContainerWidth = gameContainer.clientWidth;\n    const leftPositionGameContainer = gameContainer.getBoundingClientRect()\n        .left;\n\n    bestResult.innerHTML = +localStorage.getItem('bestResult');\n\n    function start() {\n        let quantity;\n        if (isMobile) {\n            quantity = randomInteger(1, 5);\n        } else {\n            quantity = randomInteger(1, 15);\n        }\n        let isAkrihin = randomInteger(1, 4);\n\n        arrayCurrentMicrobe = new Array();\n\n        createMicrobial(quantity);\n        createBomb();\n        if (isAkrihin == 1) {\n            createAkrihin();\n        }\n        addArrayOnPage();\n        addAnimation();\n        if (isMobile) {\n            console.log('mobile');\n            addActionMob();\n        } else {\n            console.log('desktop');\n            addActionDesk();\n        }\n        startTimer();\n    }\n\n    function addAnimation() {\n        const parents = document.querySelectorAll('.parent');\n        const items = document.querySelectorAll('.parent .inner');\n        let x = Math.trunc(gameContainerWidth - leftPositionGameContainer);\n\n        parents.forEach((parent) => {\n            let j = randomInteger(\n                (3 * gameContainerHeight) / 4,\n                gameContainerHeight,\n            );\n\n            animate({\n                duration: duration,\n                timing: function (timeFraction) {\n                    return timeFraction;\n                },\n                draw: function (progress) {\n                    parent.style.transform = `translateY(${-j * progress}px)`;\n                    if (progress == 1) {\n                        let y = parseInt(\n                            getComputedStyle(parent).transform.split(',')[5],\n                        );\n\n                        parent.style.transform = `translateY(${y}px)`;\n\n                        animate({\n                            duration: duration,\n                            timing: function (timeFraction) {\n                                return timeFraction;\n                            },\n                            draw: function (progress) {\n                                parent.style.transform = `translateY(${\n                                    y + progress * j\n                                }px)`;\n                                if (progress == 1) {\n                                    isFinish = true;\n                                }\n                            },\n                        });\n                    }\n                },\n            });\n        });\n        items.forEach((item) => {\n            let i;\n\n            if (isMobile) {\n                i = randomInteger(0, x);\n            } else {\n                i = randomInteger(leftPositionGameContainer, x);\n            }\n            item.style.transform = `translateX(${i}px)`;\n        });\n    }\n    setInterval(() => {\n        if (isFinish) {\n            isFinish = false;\n            newLv();\n            console.log('finish');\n        }\n    }, 1000);\n    function animate(options) {\n        var start = performance.now();\n\n        requestAnimationFrame(function animate(time) {\n            // timeFraction от 0 до 1\n            var timeFraction = (time - start) / options.duration;\n            if (timeFraction > 1) timeFraction = 1;\n\n            // текущее состояние анимации\n            var progress = options.timing(timeFraction);\n\n            options.draw(progress);\n\n            if (timeFraction < 1) {\n                requestAnimationFrame(animate);\n            }\n        });\n    }\n\n    function createMicrobial(quantity) {\n        for (var i = 0; i < quantity; i++) {\n            createElement();\n        }\n    }\n\n    function createElement() {\n        const container = createParentContainer();\n        const item = document.createElement('img');\n        const selectedParam = microbialParams[randomInteger(0, 2)];\n\n        item.src = `public/microb_${randomInteger(1, 5)}.png`;\n        container.style.width = `${selectedParam.width}px`;\n        container.style.height = `${selectedParam.height}px`;\n        item.setAttribute('data-point', selectedParam.points);\n        item.classList.add('microb');\n\n        container.firstChild.appendChild(item);\n        arrayCurrentMicrobe.push(container);\n    }\n    function createBomb() {\n        const bomb = document.createElement('img');\n        const container = createParentContainer();\n\n        bomb.src = 'public/bomb.png';\n        container.style.width = '100px';\n        container.style.height = '100px';\n        bomb.setAttribute('data-point', 'life');\n\n        container.firstChild.appendChild(bomb);\n        arrayCurrentMicrobe.push(container);\n    }\n\n    function createAkrihin() {\n        const akrihin = document.createElement('img');\n        const container = createParentContainer();\n\n        akrihin.src = 'public/pack.png';\n        container.style.width = '100px';\n        container.style.height = '100px';\n        akrihin.setAttribute('data-point', 'akrihin');\n\n        container.firstChild.appendChild(akrihin);\n        arrayCurrentMicrobe.push(container);\n    }\n\n    function createParentContainer() {\n        const container = document.createElement('div');\n        const conteinerInner = document.createElement('div');\n\n        conteinerInner.classList.add('inner');\n        container.classList.add('parent');\n\n        container.appendChild(conteinerInner);\n        return container;\n    }\n    function addArrayOnPage() {\n        arrayCurrentMicrobe.forEach((item) => {\n            gameContainer.appendChild(item);\n        });\n    }\n\n    function addActionDesk() {\n        const microbs = document.querySelectorAll('[data-point]');\n        let selectedItem;\n\n        microbs.forEach((microb) => {\n            microb.addEventListener('mouseover', function (e) {\n                let data = this.dataset.point;\n\n                if (selectedItem == this) {\n                    return;\n                }\n                selectedItem = this;\n\n                if (data != 'life' && data != 'akrihin') {\n                    microbeAction(this);\n                } else if (data == 'life') {\n                    bombAction(this);\n                } else if (data == 'akrihin') {\n                    akrihinAction();\n                    // akrihinAction().then(() => {\n                    //     setTimeout(() => {\n                    //         destroy(this);\n                    //     }, 1000);\n                    // });\n                }\n                setTimeout(() => {\n                    destroy(this);\n                }, 1000);\n            });\n        });\n    }\n\n    function addActionMob() {\n        const microbs = document.querySelectorAll('[data-point]');\n        let selectedItem;\n\n        microbs.forEach((microb) => {\n            microb.addEventListener('touchstart', function (e) {\n                let data = this.dataset.point;\n\n                if (selectedItem == this) {\n                    return;\n                }\n                selectedItem = this;\n\n                if (data != 'life' && data != 'akrihin') {\n                    microbeAction(this);\n                } else if (data == 'life') {\n                    bombAction(this);\n                } else if (data == 'akrihin') {\n                    akrihinAction();\n                }\n                setTimeout(() => {\n                    destroy(this);\n                }, 1000);\n            });\n        });\n    }\n\n    function microbeAction(item) {\n        let data = item.dataset.point;\n\n        points = +data + points;\n        item.classList.add('_destroy');\n        currentPointsText.innerHTML = points;\n    }\n\n    function bombAction(item) {\n        mistakes[lifes].src = 'public/cross_2.png';\n        lifes = lifes - 1;\n\n        gamePage.classList.add('_quake');\n        setTimeout(() => gamePage.classList.remove('_quake'), 2000);\n        item.src = 'public/explosion.png';\n\n        if (lifes < 0) {\n            endGame('lifes');\n        }\n    }\n\n    function akrihinAction() {\n        // return new Promise((resolve) => {\n        //     gamePage.classList.add('_freezing');\n        //     duration = 5000;\n        //     setTimeout(() => {\n        //         gamePage.classList.remove('_freezing');\n        //         duration = 1600;\n        //         resolve();\n        //     }, 3000);\n        // });\n        gamePage.classList.add('_freezing');\n        duration = 5000;\n        setTimeout(() => {\n            gamePage.classList.remove('_freezing');\n            duration = 2000;\n        }, 3000);\n    }\n    function destroy(item) {\n        item.remove();\n    }\n\n    function newLv() {\n        console.log('new');\n        gameContainer.innerHTML = '';\n        start();\n    }\n    function randomInteger(min, max) {\n        let rand = min + Math.random() * (max - min);\n        return Math.round(rand);\n    }\n\n    function startTimer() {\n        let i = 0;\n        let timer = setInterval(() => {\n            i++;\n            if (i == 180) {\n                clearInterval(timer);\n                endGame('time');\n            }\n        }, 1000);\n    }\n\n    function endGame(reason) {\n        document.location.href = 'final.html';\n\n        localStorage.setItem('currentResult', points);\n        if (+localStorage.getItem('bestResult') < +points) {\n            localStorage.setItem('bestResult', +points);\n        }\n\n        //отправка в га переменной reason\n    }\n\n    start();\n}\n\nif (finalPage) {\n    const currentResult = document.querySelector('#result');\n    const textResult = document.querySelector('#record p');\n    let currentPoints = +localStorage.getItem('currentResult');\n    let bestPoints = +localStorage.getItem('bestResult');\n\n    currentResult.innerHTML = localStorage.getItem('currentResult');\n\n    if (currentPoints > bestPoints) {\n        textResult.innerHTML = 'новый рекорд!';\n    } else if (currentPoints < bestPoints) {\n        textResult.innerHTML = 'Ваш результат!';\n    }\n}\n\nconst footer = document.querySelector('#footer_container');\nlet isClose = false;\n\nfooter.addEventListener('click', (e) => {\n    if (isClose) {\n        footer.classList.remove('_hidden');\n        isClose = false;\n    } else {\n        footer.classList.add('_hidden');\n        isClose = true;\n    }\n});\n"],"sourceRoot":""}